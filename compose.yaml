name: photoprism-organizer

networks:
  sandbox.access:
    attachable: true
    driver: bridge
    internal: false

services:

  photoprism-sandbox:
    image: photoprism/photoprism:250426
    ###
    depends_on:
      mariadb-sandbox:
        condition: service_healthy
        required: true
        restart: true
      photoprism-sandbox-setup-pre:
        condition: service_completed_successfully
        required: true
        restart: true
    environment: &services-photoprism-sandbox-environment
      PHOTOPRISM_AUTH_MODE: ${PHOTOPRISM_AUTH_MODE:-public}
      PHOTOPRISM_DATABASE_DRIVER: ${PHOTOPRISM_DATABASE_DRIVER:-mysql}
      PHOTOPRISM_DATABASE_NAME: photoprism
      PHOTOPRISM_DATABASE_PASSWORD: ${PHOTOPRISM_DATABASE_PASSWORD:?PHOTOPRISM_DATABASE_PASSWORD not set}
      PHOTOPRISM_DATABASE_SERVER: mariadb-sandbox
      PHOTOPRISM_DATABASE_USER: photoprism
      PHOTOPRISM_DISABLE_RESTART: ${PHOTOPRISM_DISABLE_RESTART:-true}
      PHOTOPRISM_DISABLE_TENSORFLOW: ${PHOTOPRISM_DISABLE_TENSORFLOW:-true}
      PHOTOPRISM_DISABLE_TLS: ${PHOTOPRISM_DISABLE_TLS:-true}
      PHOTOPRISM_DISABLE_VECTORS: ${PHOTOPRISM_DISABLE_VECTORS:-false}
      PHOTOPRISM_EXPERIMENTAL: ${PHOTOPRISM_EXPERIMENTAL:-false}
      PHOTOPRISM_GID: ${PHOTOPRISM_GID:-1000}
      PHOTOPRISM_HTTP_COMPRESSION: ${PHOTOPRISM_HTTP_COMPRESSION:-gzip}
      PHOTOPRISM_LOG_LEVEL: ${PHOTOPRISM_LOG_LEVEL:-debug}
      PHOTOPRISM_PROD: ${PHOTOPRISM_PROD:-false}
      PHOTOPRISM_READONLY: ${PHOTOPRISM_READONLY:-false}
      PHOTOPRISM_SITE_URL: ${PHOTOPRISM_SITE_URL:-http://host.docker.internal:2342}
      PHOTOPRISM_UID: ${PHOTOPRISM_UID:-1000}
      PHOTOPRISM_UMASK: ${PHOTOPRISM_UMASK:-u=rwx,g=rwx,o=rwx}
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 10s
      test: ["CMD-SHELL", 'curl --silent localhost:2342/api/v1/status | jq -r .status | grep -q "^operational$"']
      timeout: 5s
    networks:
      sandbox.access:
    ports:
      - published: ${PHOTOPRISM_PORT:-2342}
        target: 2342
    profiles:
      - sandbox
    restart: unless-stopped
    volumes:
      - bind:
          create_host_path: false
        read_only: true
        source: ${DEVCONTAINER_WORKSPACE_HOST_PATH:-.}/demo/images
        target: /photoprism/originals
        type: bind

  photoprism-sandbox-setup-pre:
    image: mariadb:10
    ###
    command:
      - -ex
      - -c
      - |
        # Create configuration file to simplify future commands
        cat << EOF > ~/.my.cnf
        [client]
        host = mariadb-sandbox
        user = root
        password = $$MARIADB_ROOT_PASSWORD
        EOF
        # Create database and user
        mariadb << EOF
        CREATE DATABASE IF NOT EXISTS photoprism;
        CREATE USER IF NOT EXISTS 'photoprism'@'%' IDENTIFIED BY '$$PHOTOPRISM_DATABASE_PASSWORD';
        GRANT ALL PRIVILEGES ON photoprism.* TO 'photoprism'@'%';
        FLUSH PRIVILEGES;
        EOF
    depends_on:
      mariadb-sandbox:
        condition: service_healthy
        required: true
        restart: true
    entrypoint: bash
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      PHOTOPRISM_DATABASE_PASSWORD: ${PHOTOPRISM_DATABASE_PASSWORD}
    networks:
      sandbox.access:
    profiles:
     - sandbox
    restart: "no"

  photoprism-sandbox-setup-post:
    image: photoprism/photoprism:250426
    ###
    command: "/setup.py"
    depends_on:
      photoprism-sandbox:
        condition: service_healthy
        required: true
        restart: true
    entrypoint: python3
    environment:
      <<: *services-photoprism-sandbox-environment
      PHOTOPRISM_SITE_URL: http://photoprism-sandbox:${PHOTOPRISM_PORT:-2342}
    networks:
      sandbox.access:
    profiles:
     - sandbox
    restart: "no"
    volumes:
      - read_only: true
        source: ${DEVCONTAINER_WORKSPACE_HOST_PATH:-.}/demo/setup.py
        target: /setup.py
        type: bind

  mariadb-sandbox:
    image: mariadb:10
    ###
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:?MARIADB_ROOT_PASSWORD not set}
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 10s
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      timeout: 5s
    networks:
      sandbox.access:
    ports:
      - published: ${MARIADB_PORT:-3306}
        target: 3306
    profiles:
      - sandbox
    restart: unless-stopped
